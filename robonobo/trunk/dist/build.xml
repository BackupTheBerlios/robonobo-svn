<project name="dist">
	<taskdef name="nsis" classname="net.sf.nsisant.Task">
		<classpath location="buildlib/nsisant-1.2.jar" />
	</taskdef>
	<property name="nsis.path" location="c:/apps/NSIS/" />
	<taskdef name="envgen" classname="com.basilv.envgen.EnvGenTask" classpath="buildlib/EnvGen-with-dependencies.jar"/>

	<!-- Uncomment this and point it at your launch4j installation -->
	<!--
	<property name="launch4j.dir" location="C:/apps/Launch4J" />
	<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
	-->
	
	<property name="dist.dir" location="target/dist/" />
	<property name="tmp.dir" location="target/tmp" />
	<property name="classes.dir" location="target/classes"/>

	<property name="version" value="DEV-${timestamp}" />
	<!-- <property name="version" value="0.4.0" /> -->
	<!-- launch4j requires the version number to be x.x.x.x -->
	<property name="launch4jVersion" value="0.4.0.0" />

	<target name="build-jar">
		<ant dir="../gui" target="fatjar"/>
	</target>
	
	<target name="exe" depends="build-jar">
		<launch4j configFile="./launch4j-cfg.xml" jar="${dist.dir}/robonobo-${version}.jar" outfile="${dist.dir}/robonobo-${version}.exe" fileVersion="${launch4jVersion}" txtFileVersion="${launch4jVersion}" productVersion="${launch4jVersion}" txtProductVersion="${launch4jVersion}" />
	</target>

	<target name="dist-win" depends="exe">
		<nsis path="${nsis.path}" script="robo-installer.nsi">
			<define name="VERSION" value="${version}" />
		</nsis>
	</target>

	<target name="generate-plist">
		<mkdir dir="${tmp.dir}"/>
		<echo file="${tmp.dir}/plist-props.csv" message="version,${version}"/>
		<envgen 
			destdir="${tmp.dir}" 
			envPropertiesFile="${tmp.dir}/plist-props.csv"
			stripFileExtension="true"
			overwrite="true">
			<source file="template/Info.plist.ftl"/>
		</envgen>
	</target>

	<target name="osx-app" depends="build-jar, generate-plist">
		<copy todir="${dist.dir}/robonobo.app">
			<fileset dir="template/robonobo.app"/>
		</copy>
		<copy todir="${dist.dir}/robonobo.app">
			<fileset file="${tmp.dir}/Info.plist"/>
		</copy>
		<copy todir="${dist.dir}/robonobo.app/Contents/MacOS" file="/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub" />
		<chmod file="${dist.dir}/robonobo.app/Contents/MacOS/JavaApplicationStub" perm="755" />
		<copy toDir="${dist.dir}/robonobo.app/Contents/Resources/Java/">
			<fileset file="${dist.dir}/robonobo-${version}.jar" />
		</copy>
	</target>

	<target name="dist-osx" depends="osx-app">
		<copy todir="${tmp.dir}/dmg-skel">
			<fileset dir="template/dmg-skel"/>
		</copy>
		<copy todir="${tmp.dir}/dmg-skel/robonobo.app">
			<fileset dir="${dist.dir}/robonobo.app"/>
		</copy>
		<exec executable="build-dmg.sh">
			<arg value="${tmp.dir}/dmg-skel"/>
			<arg value="robonobo ${version}"/>
			<arg value="10000"/>
			<arg value="${dist.dir}/robonobo-${version}.dmg"/>
		</exec>
	</target>

	<target name="clean">
		<delete dir="${classes.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${tmp.dir}"/>
		<ant dir="../gui" target="clean" />
	</target>
</project>